{"ast":null,"code":"var _jsxFileName = \"/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListOverviewProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { createList, fetchLists, getList, updateList, deleteList } from \"./FetchHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListOverviewContext = /*#__PURE__*/createContext();\nfunction ListOverviewProvider({\n  children\n}) {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const addList = async newList => {\n    try {\n      const createdList = await createList(newList);\n      setLists(prevLists => [...prevLists, createdList]);\n    } catch (err) {\n      console.error(\"Error creating list:\", err);\n    }\n  };\n  const loadLists = async userId => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const data = await fetchLists(userId);\n      setLists(data);\n    } catch (err) {\n      setError(\"Failed to load lists\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadList = async listId => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const data = await getList(listId);\n      setLists(data);\n    } catch (err) {\n      setError(\"Failed to load lists\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeList = async listId => {\n    try {\n      await deleteList(listId);\n      setLists(prevLists => prevLists.filter(list => list.id !== listId));\n    } catch (err) {\n      console.error(\"Error deleting list:\", err);\n    }\n  };\n  const changeList = async updatedData => {\n    try {\n      const updatedList = await updateList(updatedData);\n      setLists(prevLists => prevLists.map(list => list.id === id ? updatedList : list));\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n  const value = {\n    lists,\n    addList,\n    loadLists,\n    loadList,\n    removeList,\n    changeList\n  };\n  return /*#__PURE__*/_jsxDEV(ListOverviewContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(ListOverviewProvider, \"per0C0+be1o49N1S6D0/iZSWOQI=\");\n_c = ListOverviewProvider;\nexport default ListOverviewProvider;\nvar _c;\n$RefreshReg$(_c, \"ListOverviewProvider\");","map":{"version":3,"names":["createContext","useState","createList","fetchLists","getList","updateList","deleteList","jsxDEV","_jsxDEV","ListOverviewContext","ListOverviewProvider","children","_s","lists","setLists","loading","setLoading","error","setError","addList","newList","createdList","prevLists","err","console","loadLists","userId","data","loadList","listId","removeList","filter","list","id","changeList","updatedData","updatedList","map","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListOverviewProvider.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nimport {\n  createList,\n  fetchLists,\n  getList,\n  updateList,\n  deleteList,\n} from \"./FetchHelper\";\n\nexport const ListOverviewContext = createContext();\n\nfunction ListOverviewProvider({ children }) {\n  const [lists, setLists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const addList = async (newList) => {\n    try {\n      const createdList = await createList(newList);\n      setLists((prevLists) => [...prevLists, createdList]);\n    } catch (err) {\n      console.error(\"Error creating list:\", err);\n    }\n  };\n\n  const loadLists = async (userId) => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const data = await fetchLists(userId);\n      setLists(data);\n    } catch (err) {\n      setError(\"Failed to load lists\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadList = async (listId) => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const data = await getList(listId);\n      setLists(data);\n    } catch (err) {\n      setError(\"Failed to load lists\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const removeList = async (listId) => {\n    try {\n      await deleteList(listId);\n      setLists((prevLists) => prevLists.filter((list) => list.id !== listId));\n    } catch (err) {\n      console.error(\"Error deleting list:\", err);\n    }\n  };\n\n  const changeList = async (updatedData) => {\n    try {\n      const updatedList = await updateList(updatedData);\n      setLists((prevLists) =>\n        prevLists.map((list) => (list.id === id ? updatedList : list))\n      );\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n\n  const value = {\n    lists,\n    addList,\n    loadLists,\n    loadList,\n    removeList,\n    changeList,\n  };\n\n  return (\n    <ListOverviewContext.Provider value={value}>\n      {children}\n    </ListOverviewContext.Provider>\n  );\n}\n\nexport default ListOverviewProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}