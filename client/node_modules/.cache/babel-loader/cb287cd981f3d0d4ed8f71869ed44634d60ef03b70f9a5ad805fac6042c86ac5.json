{"ast":null,"code":"var _jsxFileName = \"/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListOverviewProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { createList, fetchLists, getList, updateList, deleteList } from \"./FetchHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListOverviewContext = /*#__PURE__*/createContext();\nfunction ListOverviewProvider({\n  children\n}) {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const addList = async newList => {\n    try {\n      const createdList = await createList(newList);\n      setLists(prevLists => [...prevLists, createdList]);\n    } catch (err) {\n      console.error(\"Error creating list:\", err);\n    }\n  };\n  const loadLists = async userId => {\n    console.log(\"loadLists function in ListOverviewProvider\");\n    setLoading(true);\n    setError(\"\");\n    try {\n      const data = await fetchLists(userId);\n      setLists(data);\n    } catch (err) {\n      setError(\"Failed to load lists\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadList = async listId => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const data = await getList(listId);\n      setLists(data);\n    } catch (err) {\n      setError(\"Failed to load lists\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeList = async listId => {\n    try {\n      await deleteList(listId);\n      setLists(prevLists => prevLists.filter(list => list.id !== listId));\n    } catch (err) {\n      console.error(\"Error deleting list:\", err);\n    }\n  };\n  const changeList = async updatedData => {\n    try {\n      const updatedList = await updateList(updatedData);\n      setLists(prevLists => prevLists.map(list => list.id === updatedList.id ? updatedList : list));\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n  const value = {\n    lists,\n    addList,\n    loadLists,\n    loadList,\n    removeList,\n    changeList\n  };\n  return /*#__PURE__*/_jsxDEV(ListOverviewContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(ListOverviewProvider, \"per0C0+be1o49N1S6D0/iZSWOQI=\");\n_c = ListOverviewProvider;\nexport default ListOverviewProvider;\nvar _c;\n$RefreshReg$(_c, \"ListOverviewProvider\");","map":{"version":3,"names":["createContext","useState","createList","fetchLists","getList","updateList","deleteList","jsxDEV","_jsxDEV","ListOverviewContext","ListOverviewProvider","children","_s","lists","setLists","loading","setLoading","error","setError","addList","newList","createdList","prevLists","err","console","loadLists","userId","log","data","loadList","listId","removeList","filter","list","id","changeList","updatedData","updatedList","map","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListOverviewProvider.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nimport {\n  createList,\n  fetchLists,\n  getList,\n  updateList,\n  deleteList,\n} from \"./FetchHelper\";\n\nexport const ListOverviewContext = createContext();\n\nfunction ListOverviewProvider({ children }) {\n  const [lists, setLists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const addList = async (newList) => {\n    try {\n      const createdList = await createList(newList);\n      setLists((prevLists) => [...prevLists, createdList]);\n    } catch (err) {\n      console.error(\"Error creating list:\", err);\n    }\n  };\n\n  const loadLists = async (userId) => {\n    console.log(\"loadLists function in ListOverviewProvider\");\n    setLoading(true);\n    setError(\"\");\n    try {\n      const data = await fetchLists(userId);\n      setLists(data);\n    } catch (err) {\n      setError(\"Failed to load lists\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadList = async (listId) => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const data = await getList(listId);\n      setLists(data);\n    } catch (err) {\n      setError(\"Failed to load lists\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const removeList = async (listId) => {\n    try {\n      await deleteList(listId);\n      setLists((prevLists) => prevLists.filter((list) => list.id !== listId));\n    } catch (err) {\n      console.error(\"Error deleting list:\", err);\n    }\n  };\n\n  const changeList = async (updatedData) => {\n    try {\n      const updatedList = await updateList(updatedData);\n      setLists((prevLists) =>\n        prevLists.map((list) =>\n          list.id === updatedList.id ? updatedList : list\n        )\n      );\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n\n  const value = {\n    lists,\n    addList,\n    loadLists,\n    loadList,\n    removeList,\n    changeList,\n  };\n\n  return (\n    <ListOverviewContext.Provider value={value}>\n      {children}\n    </ListOverviewContext.Provider>\n  );\n}\n\nexport default ListOverviewProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}