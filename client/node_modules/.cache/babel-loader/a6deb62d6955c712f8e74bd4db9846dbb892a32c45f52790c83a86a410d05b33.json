{"ast":null,"code":"var _jsxFileName = \"/Users/vojtechvitek/Projects/ListApp/client/src/providers/UserProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nfunction UserProvider({\n  children\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [lists, setLists] = useState([]);\n  const [activeList, setActiveList] = useState(\"\");\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const fetchUsers = async () => {\n    console.log(\"Fetching users\");\n    try {\n      const response = await fetch(\"http://localhost:8080/uu-listapp-maing01/22222222222222222222222222222222/user/list\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch users.\");\n      }\n      const data = await response.json();\n      setUsers(data.userLists.itemList);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchLists = async id => {\n    console.log(\"Fetching lists\", id);\n    try {\n      const response = await fetch(\"http://localhost:8080/uu-listapp-maing01/22222222222222222222222222222222/list/list\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          is\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch lists.\");\n      }\n      const data = await response.json();\n      console.log(response);\n      setLists(data.listLists.itemList);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const userList = users.map(user => ({\n    id: user.id,\n    name: user.name\n  }));\n  const value = {\n    userList,\n    loggedInUser,\n    setLoggedInUser,\n    activeList,\n    setActiveList,\n    fetchUsers,\n    fetchLists\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n}\n_s(UserProvider, \"vnZHB85elwv2x6uYcC+9x8Q6v6w=\");\n_c = UserProvider;\nexport default UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","users","setUsers","lists","setLists","activeList","setActiveList","loggedInUser","setLoggedInUser","loading","setLoading","error","setError","fetchUsers","console","log","response","fetch","ok","Error","data","json","userLists","itemList","err","message","fetchLists","id","method","headers","body","JSON","stringify","is","listLists","userList","map","user","name","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vojtechvitek/Projects/ListApp/client/src/providers/UserProvider.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nexport const UserContext = createContext();\n\nfunction UserProvider({ children }) {\n  const [users, setUsers] = useState([]);\n  const [lists, setLists] = useState([]);\n  const [activeList, setActiveList] = useState(\"\");\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const fetchUsers = async () => {\n    console.log(\"Fetching users\");\n    try {\n      const response = await fetch(\n        \"http://localhost:8080/uu-listapp-maing01/22222222222222222222222222222222/user/list\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch users.\");\n      }\n      const data = await response.json();\n      setUsers(data.userLists.itemList);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchLists = async (id) => {\n    console.log(\"Fetching lists\", id);\n    try {\n      const response = await fetch(\n        \"http://localhost:8080/uu-listapp-maing01/22222222222222222222222222222222/list/list\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ is }),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch lists.\");\n      }\n      const data = await response.json();\n\n      console.log(response);\n\n      setLists(data.listLists.itemList);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const userList = users.map((user) => ({\n    id: user.id,\n    name: user.name,\n  }));\n\n  const value = {\n    userList,\n    loggedInUser,\n    setLoggedInUser,\n    activeList,\n    setActiveList,\n    fetchUsers,\n    fetchLists,\n  };\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n}\n\nexport default UserProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}