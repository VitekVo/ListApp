{"ast":null,"code":"var _jsxFileName = \"/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListOverviewProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport listData from \"../data/lists.json\";\nimport { API_BASE_URL } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListOverviewContext = /*#__PURE__*/createContext();\nfunction ListOverviewProvider({\n  children\n}) {\n  _s();\n  const [lists, setLists] = useState(listData);\n  const createList = async (name, host, guestList) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/lists`, {\n        name,\n        host,\n        guests: guestList,\n        items: [],\n        // Initialize with an empty items array\n        archived: false // Default value\n      });\n\n      // Handle the response (e.g., log or update state if necessary)\n      console.log(\"List created successfully:\", response.data);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error creating the list:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  const deleteList = listId => {\n    setLists(prevLists => prevLists.filter(list => list.id !== listId));\n  };\n  const archiveList = listId => {\n    setLists(prevLists => prevLists.map(list => list.id === listId ? {\n      ...list,\n      archived: !list.archived\n    } : list));\n  };\n  const value = {\n    lists,\n    createList,\n    deleteList,\n    archiveList\n  };\n  return /*#__PURE__*/_jsxDEV(ListOverviewContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ListOverviewProvider, \"FwtXGHBXsGagUq8OmlBfm/DONgI=\");\n_c = ListOverviewProvider;\nexport default ListOverviewProvider;\nvar _c;\n$RefreshReg$(_c, \"ListOverviewProvider\");","map":{"version":3,"names":["createContext","useState","axios","listData","API_BASE_URL","jsxDEV","_jsxDEV","ListOverviewContext","ListOverviewProvider","children","_s","lists","setLists","createList","name","host","guestList","response","post","guests","items","archived","console","log","data","error","_error$response","message","deleteList","listId","prevLists","filter","list","id","archiveList","map","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListOverviewProvider.js"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport axios from \"axios\";\n\nimport listData from \"../data/lists.json\";\n\nimport { API_BASE_URL } from \"../api\";\n\nexport const ListOverviewContext = createContext();\n\nfunction ListOverviewProvider({ children }) {\n  const [lists, setLists] = useState(listData);\n\n  const createList = async (name, host, guestList) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/lists`, {\n        name,\n        host,\n        guests: guestList,\n        items: [], // Initialize with an empty items array\n        archived: false, // Default value\n      });\n\n      // Handle the response (e.g., log or update state if necessary)\n      console.log(\"List created successfully:\", response.data);\n    } catch (error) {\n      console.error(\n        \"Error creating the list:\",\n        error.response?.data || error.message\n      );\n    }\n  };\n\n  const deleteList = (listId) => {\n    setLists((prevLists) => prevLists.filter((list) => list.id !== listId));\n  };\n\n  const archiveList = (listId) => {\n    setLists((prevLists) =>\n      prevLists.map((list) =>\n        list.id === listId ? { ...list, archived: !list.archived } : list\n      )\n    );\n  };\n\n  const value = {\n    lists,\n    createList,\n    deleteList,\n    archiveList,\n  };\n\n  return (\n    <ListOverviewContext.Provider value={value}>\n      {children}\n    </ListOverviewContext.Provider>\n  );\n}\n\nexport default ListOverviewProvider;\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,QAAQ,MAAM,oBAAoB;AAEzC,SAASC,YAAY,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,mBAAmB,gBAAGP,aAAa,CAAC,CAAC;AAElD,SAASQ,oBAAoBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACE,QAAQ,CAAC;EAE5C,MAAMU,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,IAAI,EAAEC,SAAS,KAAK;IAClD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,GAAGd,YAAY,YAAY,EAAE;QAC7DU,IAAI;QACJC,IAAI;QACJI,MAAM,EAAEH,SAAS;QACjBI,KAAK,EAAE,EAAE;QAAE;QACXC,QAAQ,EAAE,KAAK,CAAE;MACnB,CAAC,CAAC;;MAEF;MACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEN,QAAQ,CAACO,IAAI,CAAC;IAC1D,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdJ,OAAO,CAACG,KAAK,CACX,0BAA0B,EAC1B,EAAAC,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACE,OAChC,CAAC;IACH;EACF,CAAC;EAED,MAAMC,UAAU,GAAIC,MAAM,IAAK;IAC7BjB,QAAQ,CAAEkB,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAAC,CAAC;EACzE,CAAC;EAED,MAAMK,WAAW,GAAIL,MAAM,IAAK;IAC9BjB,QAAQ,CAAEkB,SAAS,IACjBA,SAAS,CAACK,GAAG,CAAEH,IAAI,IACjBA,IAAI,CAACC,EAAE,KAAKJ,MAAM,GAAG;MAAE,GAAGG,IAAI;MAAEX,QAAQ,EAAE,CAACW,IAAI,CAACX;IAAS,CAAC,GAAGW,IAC/D,CACF,CAAC;EACH,CAAC;EAED,MAAMI,KAAK,GAAG;IACZzB,KAAK;IACLE,UAAU;IACVe,UAAU;IACVM;EACF,CAAC;EAED,oBACE5B,OAAA,CAACC,mBAAmB,CAAC8B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA3B,QAAA,EACxCA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC;AAAC/B,EAAA,CA/CQF,oBAAoB;AAAAkC,EAAA,GAApBlC,oBAAoB;AAiD7B,eAAeA,oBAAoB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}