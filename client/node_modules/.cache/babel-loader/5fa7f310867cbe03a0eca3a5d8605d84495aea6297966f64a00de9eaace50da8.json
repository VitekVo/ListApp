{"ast":null,"code":"var _jsxFileName = \"/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListOverviewProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListOverviewContext = /*#__PURE__*/createContext();\nfunction ListOverviewProvider({\n  children\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const createList = async (listName, loggedInUser, guestList) => {\n    console.log(\"Creating list\");\n    try {\n      const response = await fetch(\"http://localhost:8080/uu-listapp-maing01/22222222222222222222222222222222/list/create\", {\n        method: \"POST\",\n        // Set method to POST\n        headers: {\n          \"Content-Type\": \"application/json\" // Indicate JSON data\n        },\n        body: JSON.stringify({\n          name: listName,\n          // The name value\n          host: loggedInUser,\n          // The host value\n          guests: guestList // The guests array or value\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to create the list.\");\n      }\n      const data = await response.json();\n      console.log(\"List created successfully:\", data);\n\n      // Optionally, you can handle the response further (e.g., set state)\n      return data; // Return the result for further use\n    } catch (err) {\n      console.error(\"Error creating list:\", err.message);\n      setError(err.message); // Handle the error\n    } finally {\n      setLoading(false); // Stop loading state if you’re using it\n    }\n  };\n  const deleteList = async (loggedInUser, listId) => {\n    console.log(\"Deleting list:\", listId);\n    try {\n      const response = await fetch(`http://localhost:8080/uu-listapp-maing01/22222222222222222222222222222222/list/delete/`, {\n        method: \"DELETE\",\n        // Set method to DELETE\n        headers: {\n          \"Content-Type\": \"application/json\" // Optional, usually not required for DELETE\n        },\n        body: JSON.stringify({\n          userId: loggedInUser,\n          // The name value\n          listId: listId // The host value\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete the list.\");\n      }\n      const data = await response.json();\n      console.log(\"List deleted successfully:\", data);\n\n      // Optionally, return the data for further use\n      return data;\n    } catch (err) {\n      console.error(\"Error deleting list:\", err.message);\n      setError(err.message); // Handle the error state\n    } finally {\n      setLoading(false); // Stop the loading state\n    }\n  };\n  const archiveList = listId => {\n    // setLists((prevLists) =>\n    //   prevLists.map((list) =>\n    //     list.id === listId ? { ...list, archived: !list.archived } : list\n    //   )\n    // );\n  };\n  const value = {\n    createList,\n    deleteList,\n    archiveList\n  };\n  return /*#__PURE__*/_jsxDEV(ListOverviewContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(ListOverviewProvider, \"AvkqqGi0dLSrybP4yaTVnuw07+4=\");\n_c = ListOverviewProvider;\nexport default ListOverviewProvider;\nvar _c;\n$RefreshReg$(_c, \"ListOverviewProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","ListOverviewContext","ListOverviewProvider","children","_s","loading","setLoading","error","setError","createList","listName","loggedInUser","guestList","console","log","response","fetch","method","headers","body","JSON","stringify","name","host","guests","ok","Error","data","json","err","message","deleteList","listId","userId","archiveList","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListOverviewProvider.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const ListOverviewContext = createContext();\n\nfunction ListOverviewProvider({ children }) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const createList = async (listName, loggedInUser, guestList) => {\n    console.log(\"Creating list\");\n    try {\n      const response = await fetch(\n        \"http://localhost:8080/uu-listapp-maing01/22222222222222222222222222222222/list/create\",\n        {\n          method: \"POST\", // Set method to POST\n          headers: {\n            \"Content-Type\": \"application/json\", // Indicate JSON data\n          },\n          body: JSON.stringify({\n            name: listName, // The name value\n            host: loggedInUser, // The host value\n            guests: guestList, // The guests array or value\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create the list.\");\n      }\n\n      const data = await response.json();\n      console.log(\"List created successfully:\", data);\n\n      // Optionally, you can handle the response further (e.g., set state)\n      return data; // Return the result for further use\n    } catch (err) {\n      console.error(\"Error creating list:\", err.message);\n      setError(err.message); // Handle the error\n    } finally {\n      setLoading(false); // Stop loading state if you’re using it\n    }\n  };\n\n  const deleteList = async (loggedInUser, listId) => {\n    console.log(\"Deleting list:\", listId);\n    try {\n      const response = await fetch(\n        `http://localhost:8080/uu-listapp-maing01/22222222222222222222222222222222/list/delete/`,\n        {\n          method: \"DELETE\", // Set method to DELETE\n          headers: {\n            \"Content-Type\": \"application/json\", // Optional, usually not required for DELETE\n          },\n          body: JSON.stringify({\n            userId: loggedInUser, // The name value\n            listId: listId, // The host value\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to delete the list.\");\n      }\n\n      const data = await response.json();\n      console.log(\"List deleted successfully:\", data);\n\n      // Optionally, return the data for further use\n      return data;\n    } catch (err) {\n      console.error(\"Error deleting list:\", err.message);\n      setError(err.message); // Handle the error state\n    } finally {\n      setLoading(false); // Stop the loading state\n    }\n  };\n\n  const archiveList = (listId) => {\n    // setLists((prevLists) =>\n    //   prevLists.map((list) =>\n    //     list.id === listId ? { ...list, archived: !list.archived } : list\n    //   )\n    // );\n  };\n\n  const value = {\n    createList,\n    deleteList,\n    archiveList,\n  };\n\n  return (\n    <ListOverviewContext.Provider value={value}>\n      {children}\n    </ListOverviewContext.Provider>\n  );\n}\n\nexport default ListOverviewProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}