{"ast":null,"code":"var _jsxFileName = \"/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListOverviewProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"./UserProvider\";\nimport { createList, fetchLists, updateList, deleteList } from \"./FetchHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListOverviewContext = /*#__PURE__*/createContext();\nfunction ListOverviewProvider({\n  children\n}) {\n  _s();\n  const {\n    loggedInUser,\n    fetchUsers\n  } = useContext(UserContext);\n  const [lists, setLists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const addList = async (listName, loggedInUser, guestList) => {\n    const newList = {\n      name: listName,\n      host: loggedInUser,\n      guests: guestList\n    };\n    try {\n      await createList(newList);\n      loadLists(loggedInUser);\n    } catch (err) {\n      console.error(\"Error creating list:\", err);\n    }\n  };\n  const loadLists = async userId => {\n    console.log(\"Loading lists\");\n    setLoading(true);\n    setError(\"\");\n    try {\n      const data = await fetchLists(userId);\n      setLists(data);\n    } catch (err) {\n      setError(\"Failed to load lists\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeList = async listId => {\n    try {\n      await deleteList(listId);\n      loadLists(loggedInUser);\n    } catch (err) {\n      console.error(\"Error deleting list:\", err);\n    }\n  };\n  const archiveList = async (listId, state) => {\n    const updateData = {\n      archived: state\n    };\n    try {\n      await updateList(listId, updateData);\n      loadLists(loggedInUser);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    if (loggedInUser) {\n      loadLists(loggedInUser);\n    }\n  }, [loggedInUser]);\n  const value = {\n    lists,\n    addList,\n    loadLists,\n    removeList,\n    archiveList\n  };\n  return /*#__PURE__*/_jsxDEV(ListOverviewContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(ListOverviewProvider, \"lIbgpwt4pz6JcDPWkeh2kruvRZ4=\");\n_c = ListOverviewProvider;\nexport default ListOverviewProvider;\nvar _c;\n$RefreshReg$(_c, \"ListOverviewProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","UserContext","createList","fetchLists","updateList","deleteList","jsxDEV","_jsxDEV","ListOverviewContext","ListOverviewProvider","children","_s","loggedInUser","fetchUsers","lists","setLists","loading","setLoading","error","setError","addList","listName","guestList","newList","name","host","guests","loadLists","err","console","userId","log","data","removeList","listId","archiveList","state","updateData","archived","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListOverviewProvider.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\n\nimport { UserContext } from \"./UserProvider\";\n\nimport { createList, fetchLists, updateList, deleteList } from \"./FetchHelper\";\n\nexport const ListOverviewContext = createContext();\n\nfunction ListOverviewProvider({ children }) {\n  const { loggedInUser, fetchUsers } = useContext(UserContext);\n  const [lists, setLists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const addList = async (listName, loggedInUser, guestList) => {\n    const newList = { name: listName, host: loggedInUser, guests: guestList };\n    try {\n      await createList(newList);\n      loadLists(loggedInUser);\n    } catch (err) {\n      console.error(\"Error creating list:\", err);\n    }\n  };\n\n  const loadLists = async (userId) => {\n    console.log(\"Loading lists\");\n    setLoading(true);\n    setError(\"\");\n    try {\n      const data = await fetchLists(userId);\n      setLists(data);\n    } catch (err) {\n      setError(\"Failed to load lists\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const removeList = async (listId) => {\n    try {\n      await deleteList(listId);\n      loadLists(loggedInUser);\n    } catch (err) {\n      console.error(\"Error deleting list:\", err);\n    }\n  };\n\n  const archiveList = async (listId, state) => {\n    const updateData = { archived: state };\n    try {\n      await updateList(listId, updateData);\n      loadLists(loggedInUser);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    if (loggedInUser) {\n      loadLists(loggedInUser);\n    }\n  }, [loggedInUser]);\n\n  const value = {\n    lists,\n    addList,\n    loadLists,\n    removeList,\n    archiveList,\n  };\n\n  return (\n    <ListOverviewContext.Provider value={value}>\n      {children}\n    </ListOverviewContext.Provider>\n  );\n}\n\nexport default ListOverviewProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}