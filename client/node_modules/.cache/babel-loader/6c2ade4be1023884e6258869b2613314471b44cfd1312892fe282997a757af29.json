{"ast":null,"code":"var _jsxFileName = \"/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListDetailProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { UserContext } from \"./UserProvider\";\nimport { useParams } from \"react-router-dom\";\nimport { getList, updateList, createItem, updateItem, deleteItem } from \"./FetchHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListDetailContext = /*#__PURE__*/createContext();\nfunction ListDetailProvider({\n  children\n}) {\n  _s();\n  const {\n    activeList,\n    setActiveList\n  } = useContext(UserContext);\n  const [theList, setTheList] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (!activeList && id) {\n      setActiveList(id);\n    }\n  }, [id, activeList, setActiveList]);\n  useEffect(() => {\n    const fetchList = async () => {\n      if (activeList) {\n        try {\n          const fetchedList = await getList(activeList);\n          setTheList(fetchedList);\n        } catch (error) {\n          console.error(\"Error fetching the list:\", error);\n        }\n      }\n    };\n    fetchList();\n  }, [activeList]);\n  const changeName = async name => {\n    const listId = activeList;\n    const updateData = {\n      name\n    };\n    try {\n      await updateList(listId, updateData);\n      const fetchedList = await getList(activeList);\n      setTheList(fetchedList);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n  const manageUsers = async (userId, action) => {\n    const listId = activeList;\n    const updateData = {\n      userId,\n      action\n    };\n    try {\n      await updateList(listId, updateData);\n      const fetchedList = await getList(activeList);\n      setTheList(fetchedList);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n  const addItem = async (listId, state) => {\n    const updateData = {\n      archived: state\n    };\n    try {\n      await createItem(listId, updateData);\n      getList(listId);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n  const changeItem = async (listId, state) => {\n    const updateData = {\n      archived: state\n    };\n    try {\n      await updateItem(listId, updateData);\n      getList(listId);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n  const removeItem = async (listId, state) => {\n    const updateData = {\n      archived: state\n    };\n    try {\n      await deleteItem(listId, updateData);\n      getList(listId);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n  if (!id || !theList) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This URL does not exist.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n  const value = {\n    theList,\n    changeName,\n    addItem,\n    manageUsers,\n    changeItem,\n    removeItem\n  };\n  return /*#__PURE__*/_jsxDEV(ListDetailContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(ListDetailProvider, \"KZsXCmchmYDUhBj54uwQy+Is414=\", false, function () {\n  return [useParams];\n});\n_c = ListDetailProvider;\nexport default ListDetailProvider;\nvar _c;\n$RefreshReg$(_c, \"ListDetailProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","UserContext","useParams","getList","updateList","createItem","updateItem","deleteItem","jsxDEV","_jsxDEV","ListDetailContext","ListDetailProvider","children","_s","activeList","setActiveList","theList","setTheList","id","fetchList","fetchedList","error","console","changeName","name","listId","updateData","err","manageUsers","userId","action","addItem","state","archived","changeItem","removeItem","fileName","_jsxFileName","lineNumber","columnNumber","value","Provider","_c","$RefreshReg$"],"sources":["/Users/vojtechvitek/Projects/ListApp/client/src/providers/ListDetailProvider.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport { UserContext } from \"./UserProvider\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  getList,\n  updateList,\n  createItem,\n  updateItem,\n  deleteItem,\n} from \"./FetchHelper\";\n\nexport const ListDetailContext = createContext();\n\nfunction ListDetailProvider({ children }) {\n  const { activeList, setActiveList } = useContext(UserContext);\n  const [theList, setTheList] = useState(\"\");\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (!activeList && id) {\n      setActiveList(id);\n    }\n  }, [id, activeList, setActiveList]);\n\n  useEffect(() => {\n    const fetchList = async () => {\n      if (activeList) {\n        try {\n          const fetchedList = await getList(activeList);\n          setTheList(fetchedList);\n        } catch (error) {\n          console.error(\"Error fetching the list:\", error);\n        }\n      }\n    };\n\n    fetchList();\n  }, [activeList]);\n\n  const changeName = async (name) => {\n    const listId = activeList;\n    const updateData = { name };\n    try {\n      await updateList(listId, updateData);\n      const fetchedList = await getList(activeList);\n      setTheList(fetchedList);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n\n  const manageUsers = async (userId, action) => {\n    const listId = activeList;\n    const updateData = { userId, action };\n    try {\n      await updateList(listId, updateData);\n      const fetchedList = await getList(activeList);\n      setTheList(fetchedList);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n\n  const addItem = async (listId, state) => {\n    const updateData = { archived: state };\n    try {\n      await createItem(listId, updateData);\n      getList(listId);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n\n  const changeItem = async (listId, state) => {\n    const updateData = { archived: state };\n    try {\n      await updateItem(listId, updateData);\n      getList(listId);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n\n  const removeItem = async (listId, state) => {\n    const updateData = { archived: state };\n    try {\n      await deleteItem(listId, updateData);\n      getList(listId);\n    } catch (err) {\n      console.error(\"Error updating list:\", err);\n    }\n  };\n\n  if (!id || !theList) {\n    return <p>This URL does not exist.</p>;\n  }\n\n  const value = {\n    theList,\n    changeName,\n    addItem,\n    manageUsers,\n    changeItem,\n    removeItem,\n  };\n\n  return (\n    <ListDetailContext.Provider value={value}>\n      {children}\n    </ListDetailContext.Provider>\n  );\n}\n\nexport default ListDetailProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}